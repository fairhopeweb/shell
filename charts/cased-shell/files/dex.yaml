# NOTICE!!!
#
# This is a file, not a Helm template.
#
# It is processed by https://docs.gomplate.ca/ when the `dex` container is started, using
# the environment variables present in that container.
#
# Changes to this config can be tested in development mode by restarting the `dex` container.

issuer: https://{{ getenv "CASED_SHELL_HOSTNAME" | required "CASED_SHELL_HOSTNAME is required" }}/idp
web:
  https: {{ getenv "DEX_WEB_HTTPS" | required "DEX_WEB_HTTPS is required"}}
  tlsKey: {{ getenv "DEX_WEB_TLS_KEY" | required "DEX_WEB_TLS_KEY is required" }}
  tlsCert: {{ getenv "DEX_WEB_TLS_CERT" | required "DEX_WEB_TLS_CERT is required" }}

# TODO we can customize this if we want https://dexidp.io/docs/templates/
frontend:
  issuer: Cased Shell
  logoURL: https://{{ getenv "CASED_SHELL_HOSTNAME" | required "CASED_SHELL_HOSTNAME is required" }}/static/img/shell-logo.svg
  theme: light

# TODO
storage:
  type: memory

expiry:
  deviceRequests: {{ getenv "DEX_EXPIRY_DEVICE_REQUESTS" "5m" }}
  signingKeys: {{ getenv "DEX_EXPIRY_SIGNING_KEYS" "6h" }}
  idTokens: {{ getenv "DEX_EXPIRY_ID_TOKENS" "24h" }}
  authRequests: {{ getenv "DEX_EXPIRY_AUTH_REQUESTS" "24h" }}

logger:
  level: {{ getenv "DEX_LOG_LEVEL" "debug" }}
  format: {{ getenv "DEX_LOG_FORMAT" "json" }}

oauth2:
  responseTypes: ["code", "token", "id_token"]
  skipApprovalScreen: true

staticClients:
- name: {{ getenv "STATIC_CLIENT_NAME" "Cased Shell" }}
  id: {{ getenv "CASED_SHELL_OAUTH_CLIENT_ID" "cased-shell" }}
  secret: {{ getenv "CASED_SHELL_OAUTH_CLIENT_SECRET" "cased-shell-secret" }}
  redirectURIs:
  - https://{{ getenv "CASED_SHELL_HOSTNAME" | required "CASED_SHELL_HOSTNAME is required" }}/v2/auth/callback

- id: cased-cli
  name: Cased CLI
  ## Public clients must use either use a redirectURL 127.0.0.1:X or "urn:ietf:wg:oauth:2.0:oob"
  public: true
  redirectURIs:
  - http://127.0.0.1:9993/callback

connectors:

{{- if ne (getenv "OKTA_SAML_SSO_URL") "" }}
- type: saml
  id: okta
  name: Okta
  config:
    ssoURL: {{ getenv "OKTA_SAML_SSO_URL" }}

    # TODO
    # List of groups to filter access based on membership
    # allowedGroups
    #   - Admins

    # Issue value expected in the response.
    ssoIssuer: {{ getenv "OKTA_SAML_ISSUER" | required "OKTA_SAML_ISSUER is required" }}

    # CA as a base64'd blob.
    caData: {{ getenv "OKTA_SAML_CA_CERT" | required "OKTA_SAML_CA_CERT is required" }}

    redirectURI: https://{{ getenv "CASED_SHELL_HOSTNAME" | required "CASED_SHELL_HOSTNAME is required" }}/idp/callback

    usernameAttr: username
    emailAttr: email
    groupsAttr: groups
{{- end}}

{{- if ne (getenv "OKTA_OIDC_CLIENT_ID") "" }}
- type: oidc
  id: {{ getenv "OKTA_OIDC_CONNECTOR_ID" "okta" }}
  name: {{ getenv "OKTA_OIDC_CONNECTOR_NAME" "Okta" }}
  config:

    clientID: {{ getenv "OKTA_OIDC_CLIENT_ID" | required "OKTA_OIDC_CLIENT_ID is required" }}

    # Connector config values starting with a "$" will read from the environment without gotemplate
    clientSecret: $OKTA_OIDC_CLIENT_SECRET

    issuer: {{ getenv "OKTA_OIDC_ISSUER" | required "OKTA_OIDC_ISSUER is required" }}
    redirectURI: https://{{ getenv "CASED_SHELL_HOSTNAME" | required "CASED_SHELL_HOSTNAME is required" }}/idp/callback

    userIDKey: sub
    insecureSkipEmailVerified: true
    insecureEnableGroups: true
    getUserInfo: true
    scopes: ["email", "profile", "groups"]
{{- end }}

{{- if ne (getenv "OAUTH_GITHUB_CLIENT_ID") "" }}
- type: github
  id: {{ getenv "OAUTH_GITHUB_CONNECTOR_ID" "github" }}
  name: {{ getenv "OAUTH_GITHUB_CONNECTOR_NAME" "GitHub" }}
  config:

    clientID: {{ getenv "OAUTH_GITHUB_CLIENT_ID" | required "OAUTH_GITHUB_CLIENT_ID is required" }}
    # Credentials can be string literals or pulled from the environment.
    clientSecret: $OAUTH_GITHUB_CLIENT_SECRET
    redirectURI: https://{{ getenv "CASED_SHELL_HOSTNAME" | required "CASED_SHELL_HOSTNAME is required" }}/idp/callback

    # Optional choice between 'name' (default), 'slug', or 'both'.
    #
    # As an example, group claims for member of 'Site Reliability Engineers' in
    # Acme organization would yield:
    #   - ['acme:Site Reliability Engineers'] for 'name'
    #   - ['acme:site-reliability-engineers'] for 'slug'
    #   - ['acme:Site Reliability Engineers', 'acme:site-reliability-engineers'] for 'both'
    teamNameField: slug

    # flag which will switch from using the internal GitHub id to the users handle (@mention) as the user id.
    # It is possible for a user to change their own user name but it is very rare for them to do so
    useLoginAsID: false

    # Required ONLY for GitHub Enterprise.
    # This is the Hostname of the GitHub Enterprise account listed on the
    # management console. Ensure this domain is routable on your network.
    # hostName: git.example.com
    # ONLY for GitHub Enterprise. Optional field.
    # Used to support self-signed or untrusted CA root certificates.
    # rootCA: /etc/dex/ca.crt

    {{- if eq (getenv "OAUTH_GITHUB_ORGS") "" }}
    # OAUTH_GITHUB_ORGS was not set, so we'll load all groups.
    loadAllGroups: true
    {{- else }}
    # OAUTH_GITHUB_ORGS: Comma-separated list. Require users to be a member of at least one of the specified orgs.
    orgs:
    {{- range (getenv "OAUTH_GITHUB_ORGS" | strings.Split ",") }}
      - name: {{ . | quote }}
      {{- if ne (getenv (join (coll.Slice "OAUTH_GITHUB_TEAMS_" (. | strings.ToUpper | strings.ReplaceAll "-" "_")) "")) "" }}
        # OAUTH_GITHUB_TEAMS_$ORG: Comma-separated list. Require users to be a member of at least one of the teams in the specified org.
        teams: -
        {{- range ((getenv (join (coll.Slice "OAUTH_GITHUB_TEAMS_" (. | strings.ToUpper | strings.ReplaceAll "-" "_")) "")) | strings.Split ",") }}
          - {{ . | quote }}
        {{- end }}
      {{- end -}}
    {{- end }}
    {{- end }}
{{- end }}

{{- if ne (getenv "GOOGLE_OAUTH_CLIENT_ID") "" }}
- type: google
  id: {{ getenv "GOOGLE_OAUTH_CONNECTOR_ID" "google" }}
  name: {{ getenv "GOOGLE_OAUTH_CONNECTOR_NAME" "Google" }}
  config:

    clientID: {{ getenv "GOOGLE_OAUTH_CLIENT_ID" | required "GOOGLE_OAUTH_CLIENT_ID is required" }}

    # Connector config values starting with a "$" will read from the environment without gotemplate
    clientSecret: $GOOGLE_OAUTH_CLIENT_SECRET

    redirectURI: https://{{ getenv "CASED_SHELL_HOSTNAME" | required "CASED_SHELL_HOSTNAME is required" }}/idp/callback

{{- end }}

{{- if ne (getenv "MOCK_CONNECTOR_ID") "" }}
  - type: mockCallback
    id:  {{ getenv "MOCK_CONNECTOR_ID" "mock" }}
    name: {{ getenv "MOCK_CONNECTOR_NAME" "Mock Connector" }}
{{- end}}


{{- if ne (getenv "ENABLE_STATIC_PASSWORDS") "" }}

#
# All static users have the password 'casedopensource2023'.
#
# To create a hash of a different password:
#
#   echo casedopensource2023 | htpasswd -BinC 10 $username | cut -d: -f2
#

enablePasswordDB: true
staticPasswords:
- email: "admin@cased.dev"
  hash: "$2y$10$v4Jj27LEpDW7P3AZIaaBJe6uBejWONlA7na57GchPjd6Tki9Ekqby"
  username: "admin"
  userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
- email: "developer@cased.dev"
  hash: "$2y$10$eAy6E6VGn/MHyrhEvTtuPu8rPk5U/IRz1adSQo8H6GDWL2w4ZTkFi"
  username: "developer"
  userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
- email: "user@cased.dev"
  hash: "$2y$10$Q3Eat5ljReEeSIPDWosb8OJzTgk4IM7h/2RO9Hy9h/LgsydJVBMgG"
  username: "user"
  userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
{{- end}}
