# Run `yarn charts:docs` when updating this file to generate documentation.
# TODO evaluate https://github.com/bitnami-labs/readme-generator-for-helm for
# more control over section breaks.

rbac:
  # -- Disable to skip the creation of Roles and RoleBindings for the optional
  # SSHD deployment.
  create: true

# -- Annotations added to all in-chart Pods.
podAnnotations: {}
# -- imagePullSecrets added to all in-chart Pod specs.
imagePullSecrets: []

# @ignored as this currently requires v2 auth approach
server:
  # -- Set to false to skip the creation of Cased Server.
  enabled: true
  # TODO: set to release image
  image: ghcr.io/cased/cased-server:main
  service:
    # -- Type of service to create for Cased Server's SSH endpoint.
    type: NodePort
    ## -- Set to configure a fixed nodePort for access to Cased Server's SSH endpoint. Set either this or `externalHostAndPort` below for full functionality.
    nodePort:
    # -- Annotations to add to the Cased Server SSH service.
    annotations: {}
    # -- Set this if your cluster's LoadBalancer provider requires it.
    loadBalancerClass:
    # -- Client-dialable host:port pair for the Cased Server SSH endpoint. Required for full functionality if $NODE_IP:$NODE_PORT is not publicly accessible.
    externalHostAndPort:
  # -- Resource requests and limits for the Server container (a Go binary).
  resources: {}
  tls:
    # -- The Kubernetes cluster domain used in generated certificates.
    clusterDomain: cluster.local
    # -- Set to false to load certificates from the secret specified in `existingSecret`.
    autoGenerated: true
    # -- Load tls.crt and tls.key from the provided kubernetes.io/tls Secret.
    existingSecret:

config:
  # -- A value to use as the key to sign JWT tokens used in cookies.
  key: 'insecure'

  # @ignored keep this all undocumented for now
  sso:
    OKTA_SAML_SSO_URL: ''
    OKTA_SAML_ISSUER: ''
    OKTA_SAML_CA_CERT: ''
    # @ignored
    OKTA_OIDC_CLIENT_ID: ''
    # @ignored
    OKTA_OIDC_CLIENT_SECRET: ''
    # @ignored
    OKTA_OIDC_ISSUER: ''
    # @ignored
    github_client_id: ''
    # @ignored
    github_client_secret: ''
    # @ignored
    github_orgs: []
    # @ignored
    google_client_id: ''
    # @ignored
    google_client_secret: ''

  # -- Set this to 'debug' for more verbose logging.
  log_level: 'info'

  # -- Image to use for Cased Shell.
  image: 'ghcr.io/cased/shell:pr-633'
  # -- Jump configuration YAML - describe your prompts here. See
  # https://github.com/cased/jump.
  jump: ''

  # -- Backend to use for object storage. Defaults to "pvc", which uses values
  # from `persistence.*`. "s3" also supported, which uses values from
  # `aws.s3.*` or access granted via `shell.serviceAccount.name`.
  objectStorageBackend: pvc

  # -- Resource requests and limits for the Shell container.
  shellResources: {}
  # -- Resource requests and limits for the Jump container.
  jumpResources: {}
  # -- Resource requests and limits for the Vault initialization containers.
  vaultInitResources: {}

  serviceAccount:
    create: true
    # -- Name of the service account to use for the shell and jump containers.
    # If you've created a service account with access to your object storage
    # backend, you can use that here.
    name:
    # -- Annotations to add to the service account if one is created. Can be
    # used to associate the created service account with an existing [AWS IAM
    # role](https://docs.aws.amazon.com/eks/latest/userguide/associate-service-account-role.html)
    # or [GCP Workload
    # Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
    annotations: {}

  # @ignored, reserved for future use for workload auto-discovery
  role:
    # @ignored, reserved for future use for workload auto-discovery
    rules: []

  # @ignored
  CASED_SHELL_PLUGINS: ''
  # @ignored
  CASED_SHELL_SSH_USERNAME: ''

aws:
  # -- AWS region to communicate with, defaults to us-east-1. Only used if `objectStorageBackend` is "s3".
  region: us-east-1
  s3:
    # -- AWS S3 bucket name to use for object storage. Only used if `objectStorageBackend` is "s3".
    bucket:
    # -- AWS S3 API endpoint to use, defaults to upstream S3. Only used if `objectStorageBackend` is "s3".
    endpoint:
    # -- Allows configuring the AWS S3 API signatureVersion if necessary when using a custom implementation. Only used if `objectStorageBackend` is "s3".
    signatureVersion:
  key:
    # -- AWS access key ID to use for object storage. Only used if `objectStorageBackend` is "s3".
    access:
    # -- AWS secret access key to use for object storage. Only used if `objectStorageBackend` is "s3".
    secret:

service:
  # -- Type of service to create.
  type: ClusterIP
  # -- Backend port to use for the service. Change to 8888 if you require HTTP.
  port: 8443
  # -- Protocol to use for the service. Change to http to use port 8888 above.
  protocol: https
  # -- Set annotations on the created service if required.
  annotations: {}

ingress:
  # -- Set to false to skip the creation of an ingress resource.
  enabled: true
  # -- Hostname to use for the ingress. **Required**.
  fqdn: 'shell.example.com'
  # @ignored internal use only
  fqdnOverride:
  # -- Set if your ingress implementation requires a secretName.
  secretName: ''
  # -- Set annotations for your Ingress provider here.
  annotations: {}
  # -- Set if required by your Ingress provider. Required if you have more than one IngressClass marked as the default for your cluster.
  ingressClassName:

# -- Persistence settings for object storage. Only used if
# `shell.objectStorageBackend` is set to "pvc".
persistence:
  enabled: true
  storageClass: ''
  annotations: {}
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  existingClaim: ''
  subPath: ''

sshd:
  # -- Set to false to skip the creation of a SSHD service.
  enabled: true
  # -- Image to use for the included endpoint. This image runs an OpenSSH server
  # and contains an `app` user configured to automatically allow connections
  # that include a valid certificate singed by your Cased Shell CA. `kubectl` is
  # included, and `/etc/profile.d/k8s.sh` configures it for in-cluster access.
  # To include your own utilities or configure access to your own cluster, you
  # may use this image as a base image and refer to your customized image here.
  image: 'ghcr.io/cased/sshd-demo:pr-633'
  # -- Resource requests and limits for the SSHD container.
  resources: {}

  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created.
    create: true
    # -- The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname
    # template.
    name:
    # -- Annotations to add to the service account if one is created. Can be
    # used to associate the created service account with an existing [AWS IAM
    # role](https://docs.aws.amazon.com/eks/latest/userguide/associate-service-account-role.html)
    # or [GCP Workload
    # Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
    annotations: {}

  role:
    # -- The rules to apply to the role created for the SSHD service account.
    # This role is only created if `rbac.create` is enabled.
    rules:
      - apiGroups: ['']
        resources: ['pods']
        verbs: ['get', 'list']

postgresql:
  # -- Creates a PostgreSQL deployment for storing the application's relational
  # data using a subchart. If disabled, `postgresql.auth.*` and
  # `postgresql.external.*` must be set to connect to an existing PostgreSQL
  # database.
  enabled: true

  # -- Configures PostgreSQL client [ssl mode](https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-SSLMODE-STATEMENTS)
  sslMode: prefer

  tls:
    # -- Controls the TLS config of the embedded PostgreSQL deployment.
    enabled: true
    # -- Generates automatically self-signed TLS certificates for the embedded PostgreSQL deployment if enabled.
    autoGenerated: true

  auth:
    # -- Name of the database created. Also used in the application's client connection configuration.
    database: 'shell'
    # -- Name of the user created. Also used in the application's client connection configuration.
    username: 'cased'
    # -- Password assigned to the created user. Also used in the application's client connection configuration.
    password: 'shell'

  external:
    # -- External PostgreSQL database host. Required if `postgresql.enabled` is false.
    host: ''
    # -- External PostgreSQL database port. Required if `postgresql.enabled` is false.
    port: ''

  service:
    type: ClusterIP

  # -- PostgreSQL Primary persistence configuration
  persistence:
    enabled: true
    existingClaim: ''
    mountPath: /bitnami/postgresql
    subPath: ''
    storageClass: ''
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: {}
    labels: {}
    selector: {}
    dataSource: {}

# -- Configures secret storage using vault subchart.
vault:
  # -- Deploy vault subchart.
  enabled: true
  # -- Name of secret containing VAULT_ADDR and VAULT_TOKEN. Required if enabled
  # is false. If not set and enabled is true, a name is generated using the
  # fullname template.
  secretName: ''
  injector:
    enabled: false
  server:
    standalone:
      enabled: true
    authDelegator:
      enabled: false
    dataStorage:
      enabled: true
      size: 10Gi
      mountPath: '/vault/data'
      storageClass: null
      accessMode: ReadWriteOnce
      annotations: {}

dex:
  enabled: true
  image: ghcr.io/dexidp/dex:v2.35.3
  resources: {}
